{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/login.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_small_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtext(1, \"*Nazwa u\\u017Cytkownika jest wymagana\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtext(1, \"*Has\\u0142o jest wymagane\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(LoginService, fb, route, toast) {\n    this.LoginService = LoginService;\n    this.fb = fb;\n    this.route = route;\n    this.toast = toast;\n    this.type = \"password\";\n    this.isExpanded = false;\n  }\n  ngOnInit() {\n    this.loginform = this.fb.group({\n      Login: [\"\", Validators.required],\n      Pass: [\"\", Validators.required]\n    });\n  }\n  Showpass() {}\n  checkpass() {}\n  //logowanie \n  onLogin() {\n    if (this.loginform.valid) {\n      this.LoginService.Login(this.loginform.value).subscribe({\n        next: res => {\n          alert();\n          this.loginform.reset();\n          this.LoginService.storetoken(res.token);\n          this.toast.success(res.message);\n          this.route.navigate(['/users']);\n        },\n        error: err => {\n          this.toast.error(`${err.error.message}`);\n        }\n      });\n    } else {\n      this.validateAllForm(this.loginform);\n      this.toast.error(\"Wymagane pola nie są uzupełnione.\");\n    }\n  }\n  validateAllForm(formGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsDirty({\n          onlySelf: true\n        });\n      } else if (control instanceof FormGroup) {\n        this.validateAllForm(control);\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 21,\n  vars: 8,\n  consts: [[1, \"text-center\", \"text-lg-start\"], [1, \"card\", \"mb-3\"], [1, \"row\", \"g-0\", \"d-flex\", \"align-items-center\"], [1, \"col-lg-2\", \"d-none\", \"d-lg-flex\"], [\"src\", \"\", \"alt\", \"LOGO\", 1, \"w-100\", \"rounded-t-6\", \"rounded-tr-lg-0\", \"rounded-bl-lg-5\"], [1, \"col-lg-8\"], [1, \"card-body\", \"py-5\", \"px-md-5\"], [3, \"formGroup\"], [1, \"form-group\", \"pt-3\"], [1, \"form-check-input-field\"], [1, \"fa\", \"fa-user\", \"p-2\"], [\"formControlName\", \"Login\", \"type\", \"text\", \"placeholder\", \"Username\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"input-field\"], [1, \"fa\", \"fa-lock\", \"p-2\"], [\"formControlName\", \"Pass\", \"placeholder\", \"Password\", 3, \"type\"], [1, \"\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mt-4\", \"w-100\", 3, \"click\"], [1, \"text-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"div\", 6)(7, \"form\", 7)(8, \"div\", 8)(9, \"div\", 9);\n      i0.ɵɵelement(10, \"span\", 10)(11, \"input\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(12, LoginComponent_small_12_Template, 2, 0, \"small\", 12);\n      i0.ɵɵelementStart(13, \"div\", 8)(14, \"div\", 13);\n      i0.ɵɵelement(15, \"span\", 14)(16, \"input\", 15);\n      i0.ɵɵelementStart(17, \"span\", 16);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_span_click_17_listener() {\n        return ctx.Showpass();\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(18, LoginComponent_small_18_Template, 2, 0, \"small\", 12);\n      i0.ɵɵelementStart(19, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_19_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵtext(20, \"Login\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"error\", ctx.loginform.controls[\"Login\"].dirty && ctx.loginform.hasError(\"required\", \"Login\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginform.controls[\"Login\"].dirty && ctx.loginform.hasError(\"required\", \"Login\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"error\", ctx.loginform.controls[\"Pass\"].dirty && ctx.loginform.hasError(\"required\", \"Pass\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"type\", ctx.type);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginform.controls[\"Pass\"].dirty && ctx.loginform.hasError(\"required\", \"Pass\"));\n    }\n  },\n  dependencies: [i5.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"section[_ngcontent-%COMP%] {\\r\\n  margin-top: 10%;\\r\\n}\\r\\n\\r\\n.rounded-t-5[_ngcontent-%COMP%] {\\r\\n  border-top-left-radius: 0.5rem;\\r\\n  border-top-right-radius: 0.5rem;\\r\\n}\\r\\n\\r\\n@media (min-width: 992px) {\\r\\n  .rounded-tr-lg-0[_ngcontent-%COMP%] {\\r\\n    border-top-right-radius: 0;\\r\\n  }\\r\\n\\r\\n  .rounded-bl-lg-5[_ngcontent-%COMP%] {\\r\\n    border-bottom-left-radius: 0.5rem;\\r\\n  }\\r\\n}\\r\\nclass.error[_ngcontent-%COMP%] {\\r\\n    border-color: red;\\r\\n    border-inline-color: red;\\r\\n    color: red;\\r\\n    width: 10000px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSw4QkFBOEI7RUFDOUIsK0JBQStCO0FBQ2pDOztBQUVBO0VBQ0U7SUFDRSwwQkFBMEI7RUFDNUI7O0VBRUE7SUFDRSxpQ0FBaUM7RUFDbkM7QUFDRjtBQUNBO0lBQ0ksaUJBQWlCO0lBQ2pCLHdCQUF3QjtJQUN4QixVQUFVO0lBQ1YsY0FBYztBQUNsQiIsInNvdXJjZXNDb250ZW50IjpbInNlY3Rpb24ge1xyXG4gIG1hcmdpbi10b3A6IDEwJTtcclxufVxyXG5cclxuLnJvdW5kZWQtdC01IHtcclxuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwLjVyZW07XHJcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDAuNXJlbTtcclxufVxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XHJcbiAgLnJvdW5kZWQtdHItbGctMCB7XHJcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcclxuICB9XHJcblxyXG4gIC5yb3VuZGVkLWJsLWxnLTUge1xyXG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMC41cmVtO1xyXG4gIH1cclxufVxyXG5jbGFzcy5lcnJvciB7XHJcbiAgICBib3JkZXItY29sb3I6IHJlZDtcclxuICAgIGJvcmRlci1pbmxpbmUtY29sb3I6IHJlZDtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICB3aWR0aDogMTAwMDBweDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","LoginComponent","constructor","LoginService","fb","route","toast","ngOnInit","loginform","group","Login","required","Pass","Showpass","checkpass","onLogin","valid","value","subscribe","next","res","alert","reset","storetoken","token","success","message","navigate","error","err","validateAllForm","formGroup","Object","keys","controls","forEach","field","control","get","markAsDirty","onlySelf","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\JBuczek\\source\\repos\\Buczek_Gomolka_Projekt_Bazy_Danych\\Bazydanych\\ClientApp\\src\\app\\login\\login.component.ts","C:\\Users\\JBuczek\\source\\repos\\Buczek_Gomolka_Projekt_Bazy_Danych\\Bazydanych\\ClientApp\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, NgModule, OnInit } from '@angular/core';\r\nimport { LoginService } from '../services/login.service';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit{\r\n  \r\n  auth: any;\r\n  type: string = \"password\";\r\n  loginform!: FormGroup;\r\n  constructor(private LoginService: LoginService,private fb: FormBuilder,private route:Router,private toast:ToastrService ) {\r\n  }\r\n  ngOnInit(): void {\r\n    this.loginform = this.fb.group({\r\n      Login: [\"\", Validators.required],\r\n      Pass: [\"\",Validators.required]\r\n      })\r\n  }\r\n \r\n  isExpanded = false;\r\n  \r\n  Showpass() {\r\n\r\n  }\r\n  checkpass() {\r\n\r\n  }\r\n  //logowanie \r\n  onLogin() {\r\n    if (this.loginform.valid) {\r\n      this.LoginService.Login(this.loginform.value).subscribe({\r\n        next: (res: any) => {\r\n          alert();\r\n          this.loginform.reset();\r\n          this.LoginService.storetoken(res.token);\r\n          this.toast.success(res.message);\r\n          this.route.navigate(['/users']);\r\n        },\r\n        error: (err: any) => {\r\n          this.toast.error(`${err!.error.message}`);\r\n        }\r\n        })\r\n    } else {\r\n      this.validateAllForm(this.loginform);\r\n      this.toast.error(\"Wymagane pola nie są uzupełnione.\");\r\n    }\r\n   \r\n  }\r\n  private validateAllForm(formGroup: FormGroup) {\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      if (control instanceof FormControl) {\r\n        control.markAsDirty({ onlySelf: true });\r\n      } else if (control instanceof FormGroup) {\r\n        this.validateAllForm(control);\r\n      }\r\n    })\r\n    \r\n  }\r\n}\r\n","<!-- Section: Design Block -->\r\n<section class=\" text-center text-lg-start\">\r\n\r\n  <div class=\"card mb-3\">\r\n    <div class=\"row g-0 d-flex align-items-center\">\r\n      <div class=\"col-lg-2 d-none d-lg-flex\">\r\n        <img src=\"\" alt=\"LOGO\"\r\n             class=\"w-100 rounded-t-6 rounded-tr-lg-0 rounded-bl-lg-5\" />\r\n      </div>\r\n      <div class=\"col-lg-8\">\r\n        <div class=\"card-body py-5 px-md-5\">\r\n          <form [formGroup]=\"loginform\">\r\n            <div class=\"form-group pt-3\" [class.error]=\"loginform.controls['Login'].dirty && loginform.hasError('required','Login')\">\r\n              <div class=\"form-check-input-field\" >\r\n                <span class=\"fa fa-user p-2\"></span>\r\n                <input formControlName=\"Login\" type=\"text\"  placeholder=\"Username\" />\r\n\r\n              </div>\r\n            </div>\r\n            <small *ngIf=\"loginform.controls['Login'].dirty && loginform.hasError('required','Login')\" class=\"text-danger\">*Nazwa użytkownika jest wymagana</small>\r\n            <div class=\"form-group pt-3\" [class.error]=\"loginform.controls['Pass'].dirty && loginform.hasError('required','Pass')\">\r\n              <div class=\"input-field\" >\r\n                <span class=\"fa fa-lock p-2\" ></span>\r\n                <input formControlName=\"Pass\" [type]=\"type\"  placeholder=\"Password\" />\r\n                <span (click)=\"Showpass()\" class=\"\"></span>\r\n              </div>\r\n            </div>\r\n            <small *ngIf=\"loginform.controls['Pass'].dirty && loginform.hasError('required','Pass')\" class=\"text-danger\">*Hasło jest wymagane</small>\r\n            <button (click)=\"onLogin()\" type=\"submit\" class=\"btn btn-primary btn-block mt-4 w-100\">Login</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!-- Section: Design Block -->\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}