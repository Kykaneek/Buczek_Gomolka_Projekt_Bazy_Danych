{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(http) {\n    this.http = http;\n    this.Apiurl = \"https://localhost:44449/api/Login\";\n  }\n  Login(LoginOjb) {\n    return this.http.post(this.Apiurl, LoginOjb);\n  }\n  storetoken(Tokenvalue) {\n    localStorage.setItem('token', Tokenvalue);\n  }\n  gettoken() {\n    return localStorage.getItem('token');\n  }\n  isLogIn() {\n    //weryfikacja czy token istnieje\n    return !!localStorage.getItem('token');\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADf,WAAM,GAAG,mCAAmC;EACb;EACxCC,KAAK,CAACC,QAAa;IACjB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAM,IAAI,CAACC,MAAM,EAACF,QAAQ,CAAC;EAClD;EAEAG,UAAU,CAACC,UAAkB;IAC3BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,UAAU,CAAC;EAC3C;EAEAG,QAAQ;IACN,OAAOF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EACtC;EAEAC,OAAO;IACL;IACA,OAAO,CAAC,CAACJ,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EACxC;;AAlBWZ,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAc,SAAZd,YAAY;EAAAe,YAFX;AAAM","names":["LoginService","constructor","http","Login","LoginOjb","post","Apiurl","storetoken","Tokenvalue","localStorage","setItem","gettoken","getItem","isLogIn","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\JBuczek\\source\\repos\\Buczek_Gomolka_Projekt_Bazy_Danych\\Bazydanych\\ClientApp\\src\\app\\services\\login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  readonly Apiurl = \"https://localhost:44449/api/Login\";\r\n  constructor(private http: HttpClient) { }\r\n  Login(LoginOjb: any) {\r\n    return this.http.post<any>(this.Apiurl,LoginOjb);\r\n  }\r\n\r\n  storetoken(Tokenvalue: string) {\r\n    localStorage.setItem('token', Tokenvalue)\r\n  }\r\n\r\n  gettoken() {\r\n    return localStorage.getItem('token')\r\n  }\r\n\r\n  isLogIn(): boolean {\r\n    //weryfikacja czy token istnieje\r\n    return !!localStorage.getItem('token')\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}